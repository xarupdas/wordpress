
	try{		
			def newApp
			def registry = 'arupdasdocker/wordpress'
			def registryCredential = 'Githublogin'
			def version = 'v1.'		
			
			stage('Stage 1 - Code Checkout (Github)') {
				git branch: 'master',
					credentialsId: 'Githublogin',
					url: 'https://github.com/xarupdas/wordpress.git'
			}

			stage('Stage 2 - Building Image') {

				docker.withRegistry( 'https://hub.docker.com', registryCredential ) {
				def buildName = registry + ":$version$BUILD_NUMBER"
				newApp = docker.build buildName
				}
			}

			stage('Stage 3 - Push Image to Repos') {
				docker.withRegistry( 'https://hub.docker.com', registryCredential ) {
				   newApp.push()
				}
			}
			
			stage('Stage 4 - Cleaning Temporary Image') {
				sh "docker rmi $registry:$version$BUILD_NUMBER"			   
			}
			
			stage('Stage 5 - Deploy on PROD Cluster') {				
				
				container('kubectl') {										
					sh ('sed -i -e "s|image: .*|image: arupdasdocker/wordpress:v1.${BUILD_NUMBER}|g" $WORKSPACE/wordpress-deployment.yaml')
					sh ("kubectl apply -f ${WORKSPACE}/mysql-deployment.yaml")
                    sh ("kubectl apply -f ${WORKSPACE}/wordpress-deployment.yaml")
				}
			}
            
			currentBuild.result = 'SUCCESS'
        }
	catch (err) {
		currentBuild.result = 'FAILURE'				        
        sh "FAILURE"
        sh err
	}
	finally {
        sh "SUCCESS";
	}		